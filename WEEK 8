8.1 Coders here is a simple task for you, Given string str. Your task is to check whether it is a binary string or not by using python set.
code:
s=input()
c=0
for i in s:
    if i=='0' or i=='1':
        c=c+1
if c==len(s):
    print("Yes")
else:
    print("No")

8.2 Given a tuple and a positive integer k, the task is to find the count of distinct pairs in the tuple whose sum is equal to K.
code:
s=input()
k=int(input())
z=s.split(',')
l=[]
for i in range(0,len(z)):
    for j in range(i+1,len(z)):
        if int(z[i])+int(z[j])==k and [z[i],z[j]] not in l and [z[j],z[i]] not in l:
            l.append([z[i],z[j]])
            
print(len(l))

8.3 The DNA sequence is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T'.
code:
s=input()
l=len(s)
w=[]
c=0
a=0
b=10
for i in range(0,len(s)-9):
    s1=s[a:b]
    if s1 in w and w.count(s1)==1:
        print(s1,end='\n')
    w.append(s1)
    
    a=a+1
    b=b+1

8.4 Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.There is only one repeated number in nums, return this repeated number. Solve the problem using set.
code:
def find_duplicate(nums):
    seen = set()
    for num in nums:
        if num in seen:
            return num
        seen.add(num)
    return -1


nums1 = input().split()
nums1=[int(i) for i in nums1]
print(find_duplicate(nums1))  

8.5 Write a program to eliminate the common elements in the given 2 arrays and print only the non-repeating elements and the total number of such non-repeating elements.
code:
a=input()
b=input()
c=input()
z1=b.split()
z2=c.split()
z=z1+z2
#print(z)
d=0
l=[]
for i in z:
    c=0
    if i in z2 and i in z1:
        c=1
    if c==0 and i not in l:
        print(i,end=' ')
        l.append(i)
        d=d+1
if len(l)==0:
    print("NO SUCH ELEMENTS")
print()
print(d)

8.6 There is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly.
Given a string text of words separated by a single space (no leading or trailing spaces) and a string brokenLetters of all distinct letter keys that are broken, return the number of words in text you can fully type using this keyboard
code:
s1=input()
s=s1.lower()
a=list(input())
z=s.split()
d=0
for i in z:
    c=0
    for j in i:
        if j in a:
            c=1
            break
    if(c==0):
        d=d+1
print(d)

8.7 Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.
In the American keyboard:
•	the first row consists of the characters "qwertyuiop",
•	the second row consists of the characters "asdfghjkl", and
•	the third row consists of the characters "zxcvbnm
code:
kbRows = "qwertyuiop", "asdfghjkl", "zxcvbnm"
inList, outList = [input() for _ in range(int(input()))],[]

for word in inList:
    for row in kbRows:
        if set(word.lower()).issubset(set(row)):
            outList.append(word)
            
if outList : print(*outList, sep='\n'); exit();
print('No words')
