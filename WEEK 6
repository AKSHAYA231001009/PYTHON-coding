6.1 Write a python program to count all letters, digits, and special symbols respectively from a given string
code:
s=input()
l=d=c=0
for i in s:
    if i.isalpha()==True:
        l=l+1
    elif i.isdigit()==True:
        d=d+1
    else:
        c=c+1
print(l)
print(d)
print(c)

6.2 Assume that the given string has enough memory. Don't use any extra space(IN-PLACE)
code:
s=input()
n=len(s)
#s1=''
for i in range(0,n):
    if s[i].isalpha()==True:
        c=''
        for j in range(i+1,n):
           # print(s[j])
            if s[j].isdigit()==True:
                c=c+s[j]
            if s[j].isalpha()==True:
                break
        #print(c)
        s=s+s[i]*int(c)
print(s[n:])

6.3 Two string values S1, S2 are passed as the input. The program must print first N characters present in S1 which are also present in S2.
Input Format:
code:
s1=input()

s2=input()
n=int(input())
l=[]
for i in s1:
    if i not in l:
        l.append(i)
l1=[]
for i in l:
    l1.append(s2.count(i))

for i in range(0,len(l1)):
    if l1[i]>=1 and n>0:
        print(l[i],end='')
        n=n-1

6.4 Given two Strings s1 and s2, remove all the characters from s1 which is present in s2.
code:
s1=input()
s2=input()
s=''
for i in range(0,len(s1)):
    if s1[i] not in s2:
        s=s+s1[i]
        
print(s)

6.5 String should contain only the words are not palindrome
code:
s=input()
s=s.lower()
z=s.split()
for i in z:
    if i!=i[::-1]:
        print(i,end=' ')

6.6 Write a program that takes as input a string (sentence), and returns its second word in uppercase.
code:
s=input()
z=s.split()
if len(z)==1:
    print("LESS")
else:
    print(z[1].upper())

6.7 Reverse a string without affecting special characters. Given a string S, containing special characters and all the alphabets, reverse the string without affecting the positions of the special characters
code:
l=[]
s=input()
c=0
n=len(s)
for i in s:
    l.append(i)
z=[]
#print(l)
for i in range(len(l)-1,-1,-1):
    if l[i].isalpha()==True:
        z.append(l[i])
        c=c+1
c=n-c
#print(z)
for i in range(0,c):
    z.append(0)

for i in range(0,len(s)):
    if l[i].isalnum()==False:
        z.insert(i,l[i])
#print(z)    
for i in z:
    if i!=0:
        print(i,end='')

6.8 Write a program to check if two strings are balanced. For example, strings s1 and s2 are balanced if all the characters in the s1 are present in s2. The character’s position doesn’t matter. If balanced display as "true" ,otherwise "false".
code:
s1=input()
s2=input()
n=len(s1)
c=0
for i in s2:
    if i in s1:
        c=c+1
if c==n:
    print("True")
else:
    print("False")

6.9 In this exercise, you will create a program that reads words from the user until the user enters a blank line. After the user enters a blank line your program should display each word entered by the user exactly once. The words should be displayed in the same order that they were first entered. 
code:
l=[]
while True:
    s=input()
    if s=='\n' or s==' ':
        break
    if s not in l:
        l.append(s)
for i in l:
    print(i)

6.10 Given a string S which is of the format USERNAME@DOMAIN.EXTENSION, the program must print the EXTENSION, DOMAIN, USERNAME in the reverse order.
code:
s=input()
a=s.find('@')
b=s.find('.')
print(s[b+1:])
print(s[a+1:b])
print(s[0:a])

